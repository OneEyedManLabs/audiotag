name: Build Release APK

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
        
    - name: Rename APKs
      run: |
        cd app/build/outputs/apk
        mv debug/app-debug.apk debug/AudioTag-${{ github.event.release.tag_name || github.event.inputs.version_name }}-debug.apk
        mv release/app-release-unsigned.apk release/AudioTag-${{ github.event.release.tag_name || github.event.inputs.version_name }}-release.apk 2>/dev/null || true
        
    - name: Upload Debug APK to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: app/build/outputs/apk/debug/AudioTag-${{ github.event.release.tag_name }}-debug.apk
        asset_name: AudioTag-${{ github.event.release.tag_name }}-debug.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload Release APK to Release
      if: github.event_name == 'release' && steps.sign_app.outputs.signedReleaseFile
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        asset_name: AudioTag-${{ github.event.release.tag_name }}-release.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload artifacts (manual workflow)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: AudioTag-APKs
        path: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/release/*.apk